// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`writeFile generate dynamic page imports 1`] = `
"// Auto-generated file created by next-modal-pages-loader
// Do not edit.
//
import dynamic from 'next/dynamic';
import Loader from './components/loaders/loader';

const PageRoutes = new Map();

// Src/File

PageRoutes.set(function(url) {
  return url === './src/file1'
}, dynamic(() => import('./src/file1'), { loading: () => <Loader /> }));

// Src/Sub/File

PageRoutes.set(function(url) {
  return url === './src/sub/file2'
}, dynamic(() => import('./src/sub/file2'), { loading: () => <Loader /> }));

// Parent/File

PageRoutes.set(function(url) {
  return url === './parent/file3'
}, dynamic(() => import('./parent/file3'), { loading: () => <Loader /> }));

// Writer/Sub/File

PageRoutes.set(function(url) {
  return url === './src/writer/sub/file4'
}, dynamic(() => import('./src/writer/sub/file4'), { loading: () => <Loader /> }));

// Sub/Sub/File

PageRoutes.set(function(url) {
  return url === './src/writer/sub/sub/file5'
}, dynamic(() => import('./src/writer/sub/sub/file5'), { loading: () => <Loader /> }));


/**
 * Evaluates a given path with the RegEx to find a component
 *
 * @param {String} path - Url to be evaluated
 */

function getPageComponent(path) {
  let component = null;
  for (const [re, val] of PageRoutes.entries()) {
    if(re(path)) {
      component = val
      break;
    }
  }
  return component;
}

export default PageRoutes;
export { getPageComponent };
"
`;

exports[`writeFile should generate dummy routes map if no pages were found 1`] = `
"// Auto-generated file created by next-modal-pages-loader
// Do not edit.
//
import dynamic from 'next/dynamic';
import Loader from './components/loaders/loader';

const PageRoutes = new Map();



/**
 * Evaluates a given path with the RegEx to find a component
 *
 * @param {String} path - Url to be evaluated
 */

function getPageComponent(path) {
  let component = null;
  for (const [re, val] of PageRoutes.entries()) {
    if(re(path)) {
      component = val
      break;
    }
  }
  return component;
}

export default PageRoutes;
export { getPageComponent };
"
`;
